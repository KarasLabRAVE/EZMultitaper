% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multitaperSpectrogram.R
\name{multitaperSpectrogramR}
\alias{multitaperSpectrogramR}
\title{Multitaper Spectrogram functions}
\usage{
multitaperSpectrogramR(
  data,
  fs,
  frequencyRange = c(0.5, 250),
  timeBandwidth = 3,
  numTapers = 5,
  windowParams = c(1, 0.2),
  minNfft = 0,
  weighting = "unity",
  detrendOpt = "off",
  parallel = FALSE,
  numWorkers = 3,
  plotOn = FALSE,
  verbose = FALSE,
  xyflip = FALSE
)
}
\arguments{
\item{data}{(numeric vector): time series data -- required}

\item{fs}{(numeric): sampling frequency in Hz  -- required}

\item{frequencyRange}{(numeric vector): c(\if{html}{\out{<min frequency>}}, \if{html}{\out{<max frequency>}}) (default: NULL, adjusted to
c(0, nyquist) later)}

\item{timeBandwidth}{(numeric): time-half bandwidth product (window duration\emph{half bandwidth of main lobe)
(default: 5 Hz}s)}

\item{numTapers}{(numeric): number of DPSS tapers to use (default: NULL \link[=will be computed
as floor(2*time_bandwidth - 1)]{will be computed as floor(2*time_bandwidth - 1)})}

\item{windowParams}{(numeric vector): c(window size (seconds), step size (seconds)) (default: \link{5 1})}

\item{minNfft}{(numeric) minimum allowable NFFT size, adds zero padding for interpolation (closest 2^x) (default: 0)}

\item{weighting}{(char) weighting of tapers ('unity' (default), 'eigen', 'adapt')}

\item{detrendOpt}{(char): detrend data window ('linear' (default), 'constant', 'off')}

\item{parallel}{(logical): use parallel processing to speed up calculation (default: FALSE). Note: speedup is faster on}

\item{numWorkers}{(logical): plot results (default: TRUE)}

\item{plotOn}{(logical): plot results (default: TRUE)}

\item{verbose}{(logical): display spectrogram properties (default: TRUE)}

\item{xyflip}{((logical): return the transpose of mt_spectrogram)}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{   mt_spectrogram (matrix): spectral power matrix
    stimes (numeric vector): timepoints (s) in mt_spectrogram
    sfreqs (numeric vector): frequency values (Hz) in mt_spectrogram
}\if{html}{\out{</div>}}
}
\description{
Compute multitaper spectrogram of timeseries data
}
\details{
This R script contains the R implementations of the multitaper spectrogram analysis described in the paper "Sleep Neurophysiological Dynamics Through the
Lens of Multitaper Spectral Analysis".
Multitaper spectral estimation, which was developed in the early 1980
s by David Thomson2 and has been shown to have superior statistical properties compared with single-taper spectral estimates

https://github.com/preraulab/multitaper_toolbox

Results tend to agree with Prerau Lab python implementation of multitaper spectrogram with precision on the order of at most
10^-7 with SD of at most 10^-5
}
\examples{
data("pt01EcoG")

timeWindow <- c(-10, 20)
epoch <- Epoch(pt01EcoG)
fs=1000
timeNum <- ncol(epoch)
windowParams = c(1, 0.2) 
nwt=floor((timeNum/fs-windowParams[1])/windowParams[2])+1
data   <- vector(mode="numeric", length=timeNum)
data[1:timeNum]<-dataMat[sozIndex[1],1:timeNum]
# Compute the multitaper spectrogram
results = multitaperSpectrogramR(data, fs, frequencyRange, timeBandwidth, numTapers, windowParams, minNfft, weighting, detrendOpt, parallel, numWorkers,
                                 plotOn, verbose, xyflip)
}
